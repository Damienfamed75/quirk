name: Build
on: [push, pull_request]
jobs:
  test:
    # new service with volumes.
    # save coverage in volume.
    name: Unit Tests
    runs-on: ubuntu-latest

    steps:
    
    - name: Set up Go 1.12
      uses: actions/setup-go@v1
      with:
        go-version: 1.12
      id: go
      
    - name: Check out code into the Go module directory
      uses: actions/checkout@v1

    - name: Test
      run: go test -v ./...

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.12
      uses: actions/setup-go@v1
      with:
        go-version: 1.12
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v1

    - name: Build
      run: go build -v .
  
  codecov:
    name: Code Coverage
    needs: test
    runs-on: ubuntu-latest
          
    steps:
    
    - name: Set up Go 1.12
      uses: actions/setup-go@v1
      with:
        go-version: 1.12
      id: go
      
    - name: Check out code into the Go module directory
      uses: actions/checkout@v1
      
    - name: Test
      run: go test -v -coverprofile=./.github/coverage.txt -covermode=atomic ./...
    
    - name: Upload Coverage
      uses: codecov/codecov-action@v1.0.2
      with:
        token: ${{secrets.CODECOV_TOKEN}}
        file: ./coverage.txt
        flags: unittests
        name: codecov-quirk

  notify:
    name: Notification
    needs: [build, test]
    runs-on: ubuntu-latest
    
    steps:
    
    - name: Send Build Status
      env:
        WEBHOOK_URL: ${{secrets.DISCORD_WEBHOOK}}
      uses: WalshyDev/Discord-Status-Webhook@v1.0
      with:
        args: "success"

