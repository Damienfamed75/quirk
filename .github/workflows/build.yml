name: Build
on: [push, pull_request]
jobs:
  test:
    # new service with volumes.
    # save coverage in volume.
    name: Unit Tests
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis
        ports:
          - 6379:6379
          
    steps:
    
    - name: Set up Go 1.12
      uses: actions/setup-go@v1
      with:
        go-version: 1.12
      id: go
      
    - name: Check out code into the Go module directory
      uses: actions/checkout@v1
      
    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi
      
    - name: Test
      working-directory: ./redis
      env:
        REDIS_HOST: redis
        REDIS_PORT: ${{ job.services.redis.ports[6379] }}
      run: sudo go test -v -coverprofile=coverage.txt -covermode=atomic ./...

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.12
      uses: actions/setup-go@v1
      with:
        go-version: 1.12
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v1

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: Build
      run: go build -v .
  
  codecov:
    name: Code Coverage
    needs: test
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis
        ports:
          - 6379/tcp
          
    steps:
    - uses: codecov/codecov-action@v1.0.2
      with:
        token: ${{secrets.CODECOV_TOKEN}}
        file: ./coverage.txt
        flags: unittests
        name: codecov-quirk
    
    # connect to job service volume.
    # get coverage from there.
    
    - name: Upload Coverage
      working-directory: ./redis
      env:
        REDIS_HOST: localhost
        REDIS_PORT: ${{ job.services.redis.ports[6379] }}
  
  notify:
    name: Notify
    needs: [build, test]
    runs-on: ubuntu-latest
    steps:
    
    - name: Send Notification
      env:
        DISCORD_WEBHOOK: ${{secrets.DISCORD_WEBHOOK}}
      uses: Ilshidur/action-discord@0.0.2
